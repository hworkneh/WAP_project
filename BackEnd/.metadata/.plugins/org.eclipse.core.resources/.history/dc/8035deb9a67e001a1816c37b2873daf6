package edu.miu.goldendomemarket.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.google.gson.Gson;

import edu.miu.goldendomemarket.domain.Order;
import edu.miu.goldendomemarket.service.serviceImpl.OrderServiceImpl;
import edu.miu.goldendomemarket.util.Database;

/**
 * Servlet implementation class OrderController
 */
@WebServlet("/api/order")
public class OrderController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public OrderController() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession();
		if(session.getAttribute("user")!=null && (session.getAttribute("user_type").equals("admin")||session.getAttribute("user_type").equals("manager")||session.getAttribute("user_type").equals("student"))) {	
			OrderServiceImpl orderService=new OrderServiceImpl((Database) getServletContext().getAttribute("db"));
			response.setContentType("text/html");
			String result=null;
			if(request.getParameterMap().containsKey("id")) {
				Order order=orderService.findById(Integer.parseInt(request.getParameter("id")));
				result=new Gson().toJson(order);
			}else {
				if(session.getAttribute("user_tyoe").equals("student")) {
					
				}else {
					List<Order> order=orderService.findAll(); 
					result=new Gson().toJson(order);
				}
			}
			PrintWriter out = response.getWriter();
			out.print(result);
			out.flush();
		}else {
			PrintWriter out = response.getWriter();
			out.print("unauthorized user");
			out.flush();
		}
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		OrderServiceImpl orderService=new OrderServiceImpl((Database) getServletContext().getAttribute("db"));
		response.setContentType("text/html");
		Gson gson = new Gson();
		StringBuilder sb = new StringBuilder();
		String s;
		while ((s = request.getReader().readLine()) != null) {
			sb.append(s);
		}
		Order order = (Order) gson.fromJson(sb.toString(), Order.class);
		Order result;
		if(orderService.findById(order.getOrderId())==null) {
			result=orderService.save(order);
		}else {
			result=null;
		}
		PrintWriter out = response.getWriter();
		String json = new Gson().toJson(result);
		out.print(json);
		out.flush();
	}

	/**
	 * @see HttpServlet#doPut(HttpServletRequest, HttpServletResponse)
	 */
	protected void doPut(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		OrderServiceImpl orderService=new OrderServiceImpl((Database) getServletContext().getAttribute("db"));
		response.setContentType("text/html");
		Gson gson = new Gson();
		StringBuilder sb = new StringBuilder();
		String s;
		while ((s = request.getReader().readLine()) != null) {
			sb.append(s);
		}
		Order order = (Order) gson.fromJson(sb.toString(), Order.class);
		Order result;
		if(orderService.findById(order.getOrderId())!=null) {
			result=orderService.update(order, order.getOrderId());
		}else {
			result=null;
		}
		PrintWriter out = response.getWriter();
		String json = new Gson().toJson(result);
		out.print(json);
		out.flush();
	}

	/**
	 * @see HttpServlet#doDelete(HttpServletRequest, HttpServletResponse)
	 */
	protected void doDelete(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		OrderServiceImpl orderService=new OrderServiceImpl((Database) getServletContext().getAttribute("db"));
		response.setContentType("text/html");
		Gson gson = new Gson();
		StringBuilder sb = new StringBuilder();
		String s;
		while ((s = request.getReader().readLine()) != null) {
			sb.append(s);
		}
		Order order = (Order) gson.fromJson(sb.toString(), Order.class);
		PrintWriter out = response.getWriter();
		if(orderService.findById(order.getOrderId())!=null) {
			orderService.delete(order.getOrderId());
			out.print(true);
		}else {
			out.print(false);
		}
		out.flush();
	}

}
