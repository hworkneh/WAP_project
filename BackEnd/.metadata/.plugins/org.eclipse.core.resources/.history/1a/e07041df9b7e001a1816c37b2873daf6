package edu.miu.goldendomemarket.repository;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import edu.miu.goldendomemarket.domain.Account;
import edu.miu.goldendomemarket.util.Database;

public class AccountRepository {

	private Database db;
	
	public AccountRepository(Database db) {
		this.db=db;
		
	}
	
	public List<Account> findAll(){
		List<Account> acc=new ArrayList<Account>();
		ResultSet rs;
		try {
			rs = db.runSql("select * from account");
			while(rs.next()) {
				Integer accountId=Integer.parseInt(rs.getString("accountId"));
				String fullName=rs.getString("fullName");
				String email=rs.getString("email");
				String password=rs.getString("password");
				String accountType=rs.getString("accountType");
				acc.add(new Account(accountId,fullName, email, password, accountType));
			}
			return acc;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		}
	}
	
	public Account findById(Integer accountId) {
		Account acc=null;
		ResultSet rs;
		try {
			rs = db.runSql("select * from account where accountId='"+accountId+"'");
			while(rs.next()) {
				Integer raccountId=Integer.parseInt(rs.getString("accountId"));
				String fullName=rs.getString("fullName");
				String email=rs.getString("email");
				String password=rs.getString("password");
				String accountType=rs.getString("accountType");
				acc=new Account(raccountId, fullName, email, password, accountType);
			}
			return acc;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		}
	}
	
	public Account save(Account account) {
		try {
			String sql="insert into account (email, password, accountType, fullName) values (?, ?, ?, ?)";
			PreparedStatement preparedStmt = db.getConnection().prepareStatement(sql);
			preparedStmt.setString (1, account.getEmail());
			preparedStmt.setString (2, account.getPassword());
			preparedStmt.setString (3, account.getAccountType());
			preparedStmt.setString (4, account.getFullName());
		    preparedStmt.execute();
			return account;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		}	
	}
	public Account update(Account account, Integer accountId) {
		try {
			String sql= "UPDATE account SET email= ? ,fullName= ? , password= ? , accountType= ? WHERE accountId = ?";
			PreparedStatement preparedStmt = db.getConnection().prepareStatement(sql);
			preparedStmt.setString (1, account.getEmail());
			preparedStmt.setString (2, account.getPassword());
			preparedStmt.setString (3, account.getAccountType());
			preparedStmt.setString (4, account.getFullName());
			preparedStmt.setString (5, accountId.toString());
			preparedStmt.execute();
			return account;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		}
	}
	
	public void delete(Integer accountId) {
		try {
			String sql= "DELETE FROM account WHERE accountId = ?";
			PreparedStatement preparedStmt = db.getConnection().prepareStatement(sql);
			preparedStmt.setString(1, accountId.toString());
			preparedStmt.execute();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public boolean findUser(String email, String password) {
		try {
			String sql= "Select * FROM account WHERE email = ? AND password = ?";
			PreparedStatement preparedStmt = db.getConnection().prepareStatement(sql);
			preparedStmt.setString(1, email);
			preparedStmt.setString(1, password);
			System.out.println(preparedStmt.execute());
			return true;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
	}
}
